services:
  # Dependant services
  ## Database (MongoDB) server
  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: testtest
    volumes:
      - data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test -u admin -p testtest --authenticationDatabase admin --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  ##Â Database (MongoDB) GUI
  mongo-express:
    image: mongo-express
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=dracula
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_USERNAME=admin
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=testtest
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - 8081:8081
    healthcheck:
      test: wget --quiet --tries=3 --spider http://mongo-express:8081 || exit 1
      interval: 7s
      timeout: 5s
      retries: 10
      start_period: 2s

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniotest
    command: server --console-address ":9001" /data
    healthcheck:
      test: curl http://minio:9000/minio/health/live
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  createbucket:
    image: minio/mc:RELEASE.2025-07-21T05-28-08Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio miniotest;
      /usr/bin/mc mb myminio/epp || true;
      /usr/bin/mc mirror /automation-data myminio/epp/automation;
      exit 0;
      "
    volumes:
      - ./data/automation:/automation-data

  # EPP API
  api:
    build:
      context: .
      target: dev
    healthcheck:
      test: sh -c 'apk add curl; curl http://localhost:3000/'
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    depends_on:
      mongodb:
        condition: service_healthy
      minio:
        condition: service_healthy
      createbucket:
        condition: service_completed_successfully
    environment:
      REPO_TYPE: MongoDB
      REPO_CONNECTION: mongodb:27017
      REPO_USERNAME: admin
      REPO_PASSWORD: testtest

      # EPP S3 bucket
      S3_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: miniotest
      BUCKET_NAME: epp
    ports:
      - 3000:3000
    volumes:
      - ./src:/opt/epp/src

  # expose API and client via proxy
  nginx:
    image: nginx:latest
    depends_on:
      api:
        condition: service_healthy
    ports:
    - 8080:80
    volumes:
    - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf
volumes:
  data: {}
  minio_storage: {}
